# 面向对象 三大特性 继承

'''
1.在不指定继承的父类时，所有类都继承自 object 类（系统提供）
2.子类继承父类后，拥有父类中除了私有成员的所有成员属性和方法
3.子类继承父类后，并不会把父类的成员复制给子类，而是引用
4.子类继承父类后重新定义父类的方法，称为重写
5.子类中可以去直接调用父类中定义的方法 super().父类方法名()
6.子类如果定义了父类中没有的方法，称为对父类的扩展
7.子类可以有自己的成员，也可以没有
8.一个父类可以被多个子类继承
9.子类调用父类的方法时，如果该方法有参数要求，也需要传递参数
'''

class maoke():
    # 属性
    maose = '猫纹'
    sex = 'm'

    # 方法
    def pao(self):
        print('走猫步')

    def pa(self):
        print('能上树')


# 定义猫类  去继承 猫科类
class mao(maoke):

    # 继承父类后，重新定义了父类中的方法
    def pa(self):
        # 在子类中可以使用super直接调用父类的方法
        super().pa()
        print('很快的就能上树')

    def zhua(self):
        print('喜欢抓老鼠')

# 通过猫类 实例化对象
h = mao()
# print(h.__dict__)   # {}

# 可以获取对象的属性 猫对象自己的属性 ==> 猫类属性 ==> 继承的父类属性
# print(h.maose)
# 调用对象的方法
# h.pao()
# h.pa()
# h.zhua()

class bao(maoke):
    pass

b = bao()
print(b)
b.pa()
b.sex














































