# 析构方法 __del__
'''
__del__ 析构方法
    触发机制：当前类实例化的对象被销毁时，自动触发
    作用：    可以在析构方法中完成一些特殊任务，比如在初始化方法中打开的文件，可以在析构方法中关闭
__del__
    析构方法会在对象被销毁时自动触发
    作用：    关闭一些打开的资源
    注意：    是对象被销毁时触发了这个析构方法，而不是析构方法销毁了对象
对象会在哪些情况下被销毁
    1.当程序执行完毕，内存中所有的资源都会被销毁释放
    2.使用 del 删除时
    3.对象没有被引用时，会自动销毁
'''
# 定义一个类，完成一个日志的记录
#     即调用对象时，传递一个日志信息
#     这个对象会创建一个文件，开始写入，并在最后关闭这个文件

import time
class writeLog():
    # 成员属性
    fileurl = './'  # 文件的路径
    # 日志文件的名称
    filename = time.strftime('%Y-%m-%d')+'.log'

    # 初始化   打开文件
    def __init__(self):
        # 完成文件的打开
        print('初始化方法触发了。完成文件的打开')
        self.fileobj = open(self.fileurl+self.filename,'a+',encoding='utf-8')

    # 写日志的方法
    def log(self,s):
        print(f'把日志：{s} 写入文件中')

    # 析构方法
    def __del__(self):
        print('析构方法被触发了，关闭打开的文件')
        # 在对象被销毁时，关闭在初始化方法中打开的文件
        self.fileobj.close()

# 实例化对象
# l = writeLog()
# l.log('今天天气还不错哦。。。')

# 使用 del 手动删除
# del l

# 当对象没有被引用时
# writeLog()
#
# print('.........')

# 思考题：
class Cart():
    brand = ''
    def __init__(self,b):
        self.brand = b
        print(f'初始化方法被触发：创建{self.brand}汽车')

    def __del__(self):
        print(f'析构方法被触发:{self.brand}汽车已经销毁了')

# 问题1：请写出程序的执行顺序
bm = Cart('宝马')
bc = Cart('奔驰')
fll = Cart('法拉利')
'''
程序运行结果
    1.初始化方法被触发：创建宝马汽车
    2.初始化方法被触发：创建奔驰汽车
    3.初始化方法被触发：创建法拉利汽车
    4.析构方法被触发:宝马汽车已经销毁了
    5.析构方法被触发:奔驰汽车已经销毁了
    6.析构方法被触发:法拉利汽车已经销毁了
'''
# 问题2：请写出程序的执行结果
# Cart('宝马')
# Cart('奔驰')
# Cart('法拉利')
'''
程序执行结果
    1.初始化方法被触发：创建宝马汽车
    2.析构方法被触发:宝马汽车已经销毁了
    3.初始化方法被触发：创建奔驰汽车
    4.析构方法被触发:奔驰汽车已经销毁了
    5.初始化方法被触发：创建法拉利汽车
    6.析构方法被触发:法拉利汽车已经销毁了
'''
















































